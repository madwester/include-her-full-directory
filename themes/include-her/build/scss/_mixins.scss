$breakpoints: (
    'xs': (max-width: 575px),
    'sm': (max-width: 767px),
    'md': (max-width: 991px ),
    'lg': (max-width: 1199px ),
    'xl': (min-width: 1200px)
) !default;

//xs = 0-575px
//sm = 576px - 767px
//md = 768px - 991px
//lg = 992px - 1199px
//lx = 1200px - 

/// Mixin to manage responsive breakpoints
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respondTo($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @media #{inspect(map-get($breakpoints, $breakpoint))} {
        @content;
      }
    }
   
    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
  }

// =============================================================================
// Media Queries
// =============================================================================

@mixin media($queryString){
    @media #{$queryString} { 
      @content;
    }
}

@mixin ipad {
  @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) {
    @content;
  }
}

@mixin iphone {
  @media only screen and (min-device-width : 320px) and (max-device-width : 736px)  {
    @content;
  }
}

// =============================================================================
// Styles
// =============================================================================

@mixin ease-animation($seconds) {
    -webkit-transition: all $seconds ease-in-out;
    -moz-transition: all $seconds ease-in-out;
    -ms-transform: all $seconds ease-in-out;
    -o-transition: all $seconds ease-in-out;
    transition: all $seconds ease-in-out;
}

@mixin transition($transition...) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -ms-transform: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin background-size($size){
    -webkit-background-size: $size;
    -moz-background-size: $size;
    -ms-background-size: $size;
    -o-background-size: $size;
    background-size: $size;
}

@mixin rotate($rotate) {
    -webkit-transform: rotate($rotate);
    -moz-transform: rotate($rotate);
    -ms-transform: rotate($rotate);
    -o-transform: rotate($rotate);
    transform: rotate($rotate);
}

@mixin transform($transform) {
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform;
    transform: $transform;
}

@mixin border-radius($border-radius) {
    -webkit-border-radius: $border-radius;
    -moz-border-radius: $border-radius;
    -ms-border-radius: $border-radius;
    -o-border-radius: $border-radius;
    border-radius: $border-radius;
}

@mixin box-shadow($box-shadow...) {
    -webkit-box-shadow: $box-shadow;
       -moz-box-shadow: $box-shadow;
            box-shadow: $box-shadow;
}
@mixin reset(){
    padding: 0;
    margin: 0;
}